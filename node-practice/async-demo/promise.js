
// ***this is how we create a promise... 
const p = new Promise((resolve, reject) => {
    // Kick off some async work --> access a db or call a web service, or start a timer, or any kind of Async operation...
    setTimeout(() => {
        // resolve(1);   // In real world senario it would be a user that we read from a db... // lets pass -> '1' for resolve... lets assume this is the result of our asynchronous operation...
        reject(new Error('The Great ERROR message... lol'));   // alternatively if something goes wrong then error message... 
    }, 2000);
});


// ***this is how we consume the above created promise... 
// now we need to consume this promise... so somewhere in the code we have to recieve the output... we get two option -> .catch and .then -> to catch the result, and .then for specifying what to do then...
p
    .then(result => console.log('Result is --> ', result))   // we call .then to get the result and .catch to catch error... // this is for success senario.. // in this case result is the one we are processing in --> resolve(1) ... above...
    .catch(err => console.log('Error is --> ', err.message));   // this is for error senario incase anything goes wrong with our request...

